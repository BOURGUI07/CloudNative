
services:
  polar-rabbitmq:
    image: rabbitmq:3.13-management
    container_name: polar-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - polar-network
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5


  polar-redis:
    image: "redis:7.0"
    container_name: "polar-redis"
    ports:
      - 6379:6379
    networks:
      - polar-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5



  edge-service:
    depends_on:
      polar-redis:
        condition: service_healthy
      polar-keycloak:
        condition: service_healthy
      polar-ui:
        condition: service_started
      catalog-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
    image: "edge-service"
    ports:
      - 9000:9000
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      - CATALOG_SERVICE_URL=http://catalog-service:9001
      - ORDER_SERVICE_URL=http://order-service:9002
      - SPA_URL=http://polar-ui:9004
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_DATA_REDIS_HOST=polar-redis
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://host.docker.internal:8080/realms/PolarBookshop
    networks:
      - polar-network


  catalog-service:
    image: "catalog-service"
    depends_on:
      polar-postgres:
        condition: service_healthy
      config-service:
        condition: service_healthy
    ports:
      - 9001:9001
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog
      - SPRING_FLYWAY_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog
      - LOGGING_LEVEL_ROOT=DEBUG
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=DEBUG
    networks:
      - polar-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9001/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5


  order-service:
    image: "order-service"
    depends_on:
      polar-postgres:
        condition: service_healthy
      polar-rabbitmq:
        condition: service_healthy
      config-service:
        condition: service_healthy
    ports:
      - 9002:9002
    deploy:
      resources:
        limits:
          memory: 700m
    environment:
      - POLAR_CATALOG_SERVICE_URI=http://catalog-service:9001
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_R2DBC_URL=r2dbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_FLYWAY_URL=jdbc:postgresql://polar-postgres:5432/polardb_order
      - LOGGING_LEVEL_ROOT=DEBUG
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=DEBUG
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
    networks:
      - polar-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9002/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5



  config-service:
    image: "config-service"
    ports:
      - 8888:8888
    networks:
      - polar-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 1m
      timeout: 3s
      retries: 3



  polar-postgres:
    image: "postgres:14.12"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - polar-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 30s
      timeout: 10s
      retries: 5


  dispatcher-service:
    depends_on:
      polar-rabbitmq:
        condition: service_healthy
    image: "dispatcher-service"
    ports:
      - 9003:9003
    networks:
      - polar-network
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_RABBITMQ_HOST=polar-rabbitmq

  polar-keycloak:
    image: quay.io/keycloak/keycloak:19.0
    container_name: "polar-keycloak"
    command: start-dev --import-realm
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    environment:
      - KEYCLOAK_ADMIN=user
      - KEYCLOAK_ADMIN_PASSWORD=password
    ports:
      - 8080:8080
    networks:
      - polar-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/realms/PolarBookshop" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


  polar-ui:
    image: "ghcr.io/polarbookshop/polar-ui:v1"
    container_name: "polar-ui"
    ports:
      - 9004:9004
    networks:
      - polar-network
    environment:
      - PORT=9004
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9004" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 180s



networks:
  polar-network:
    driver: bridge

